\begin{thebibliography}{1}

\bibitem{Doberkat}
Ernst~E. Doberkat.
\newblock An average case analysis of floyd's algorithm to construct heaps.
\newblock {\em Information and Control}, 61(2):114--131, 1984.

\bibitem{ACM}
Robert~W. Floyd.
\newblock Algorithm 245: Treesort.
\newblock {\em Commun. ACM}, 7(12):701, dec 1964.

\bibitem{KnuthHeap}
Donald~E. Knuth.
\newblock {\em The Art of Computer Programming, Volume 3: (2nd Ed.) Sorting and
  Searching}, pages 144--145.
\newblock Addison Wesley Longman Publishing Co., Inc., USA, 1998.

\bibitem{234tree}
Donald~E. Knuth.
\newblock {\em The Art of Computer Programming, Volume 3: (2nd Ed.) Sorting and
  Searching}, page 481–491.
\newblock Addison Wesley Longman Publishing Co., Inc., USA, 1998.

\bibitem{leroy3ocaml}
Xavier Leroy, Damien Doligez, Alain Frisch, Jacques Garrigue, Didier R{\'e}my,
  and J{\'e}r{\^o}me Vouillon.
\newblock The ocaml system: Documentation and user’s manual.
\newblock {\em INRIA}, 3:42.

\bibitem{DataStructure}
Chris Okasaki.
\newblock {\em Purely Functionnal Data Structures}.
\newblock Cambridge University Press, 1998.
\newblock page 17.

\bibitem{md5}
Ronald Rivest.
\newblock The md5 message-digest algorithm.
\newblock Technical report, 1992.

\bibitem{TasBinom}
Jean Vuillemin.
\newblock A data structure for manipulating priority queues.
\newblock {\em Commun. ACM}, 21(4):309–315, apr 1978.

\end{thebibliography}
